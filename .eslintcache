[{"/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/index.js":"1","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/App.js":"2","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/reportWebVitals.js":"3","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/cirlesAnimation/Circles.js":"4","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/ImageReveal/ImageReveal.js":"5","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/ImageSlider/ImageSlider.jsx":"6","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/Tests/Test.js":"7","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/scrollTrigger/ScrollTrigger.js":"8","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/HowItWorksAnimation/Anim.js":"9"},{"size":500,"mtime":1610691744443,"results":"10","hashOfConfig":"11"},{"size":1450,"mtime":1615117048402,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610691744443,"results":"13","hashOfConfig":"11"},{"size":1358,"mtime":1610782590713,"results":"14","hashOfConfig":"11"},{"size":1009,"mtime":1613307121791,"results":"15","hashOfConfig":"11"},{"size":8342,"mtime":1614442147906,"results":"16","hashOfConfig":"11"},{"size":339,"mtime":1614353737431,"results":"17","hashOfConfig":"11"},{"size":9666,"mtime":1614935458816,"results":"18","hashOfConfig":"11"},{"size":6568,"mtime":1615372905414,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ubgtle",{"filePath":"23","messages":"24","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/index.js",[],["44","45"],"/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/App.js",["46","47","48","49","50","51","52","53","54","55"],"import logo from './logo.svg';\nimport './App.css';\nimport { useRef, useEffect } from 'react';\nimport { TweenMax, Power3 } from 'gsap';\nimport { Circles } from './cirlesAnimation/Circles'\nimport { ImageReveal } from './ImageReveal/ImageReveal'\nimport { ImageSlider } from './ImageSlider/ImageSlider'\n// import { ImageSlider } from './ImageSlider/ImageSlider'\nimport { Test } from './Tests/Test'\nimport { ScrollTriggered } from './scrollTrigger/ScrollTrigger'\nimport { Anim } from './HowItWorksAnimation/Anim'\n\nfunction App() {\n\n  // let logoItem = useRef(null);\n\n  // useEffect(() => {\n  //   console.log(logoItem);\n  //   TweenMax.to(\n  //     logoItem.current,\n  //     .60,\n  //     {\n  //       opacity: 1,\n  //       y: -20,\n  //       ease: Power3.easeOut\n  //     }\n    \n  //   )\n  // }, [])\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} ref={logoItem} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n\n      {/* <Circles /> */}\n\n      {/* <ImageReveal /> */}\n\n      {/* <ImageSlider /> */}\n\n      {/* <Test /> */}\n\n      {/* < ScrollTriggered /> */}\n\n\n      <Anim />\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/reportWebVitals.js",[],"/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/cirlesAnimation/Circles.js",[],"/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/ImageReveal/ImageReveal.js",["56","57","58","59"],"import React, { useRef, useEffect, useState } from 'react'\nimport { TweenMax, TimelineLite, Power2 } from 'gsap';\nimport './ImageReveal.css'\nimport Image from './image.jpeg'\nimport CSSRulePlugin from 'gsap/CSSRulePlugin';\n\n\nexport const ImageReveal = () => {\n\n    const container = useRef(null)\n    const image = useRef(null)\n    const reveal = CSSRulePlugin.getRule(\".image-container::after\");\n\n    let tl = new TimelineLite()\n\n    useEffect(() => {\n\n        tl.to(container.current, 0, { css: {visibility: 'visible'} }).to(reveal, 1.2 , { width: '0%', ease: Power2.easeInOut })\n        .to(image.current, 1.4, { scale: 1, ease: Power2.easeInOut, delay: -0.9})\n        \n    }, [])\n\n    return (\n        <section className=\"main\">\n            <div ref={container} className=\"container\">\n                <>\n                    <div className=\"image-container\">\n                        <img ref={image} src={Image} />\n                    </div>\n                </>\n            </div>\n        </section>\n    )\n}\n","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/ImageSlider/ImageSlider.jsx",["60","61","62","63","64","65","66","67","68","69","70","71"],"import React, { useRef, useEffect, useState } from 'react';\nimport { TweenLite, TweenMax, TimelineLite, Power2 } from 'gsap';\nimport './ImageSlider.css';\nimport image from './pictures/1.jpeg'\nimport image2 from './pictures/2.jpeg'\nimport image3 from './pictures/3.jpeg'\nimport CSSRulePlugin from 'gsap/CSSRulePlugin';\n\n\nconst Data = [\n    {\n        name: \"Alex\",\n        company: \"Tech\",\n        image: `${require(\"./pictures/image.jpg\")}`,\n        testimonial: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. \"\n    },\n    {\n        name: \"Harmain\",\n        company: \"Food\",\n        testimonial: \"Inventore labore sapiente dolorem reprehenderit eligendi expedita recusandae quas repellendus.\",\n        image: { image2 }\n    },\n    {\n        name: \"Ali\",\n        company: \"Travel\",\n        testimonial: \" dolorum explicabo laudantium quidem libero magni, accusantium neque esse facilis deserunt ipsa.\",\n        image: { image3 }\n    }\n]\n\nexport const ImageSlider = () => {\n    let ImageList = useRef(null);\n    let TestimonialList = useRef(null);\n\n    const [state, setstate] = useState({\n        active1: true,\n        active2: false,\n        active3: false,\n        stop: false\n    })\n\n    useEffect(() => {\n\n        TweenLite.to(TestimonialList.current.children[0], 0, {\n            opacity: 1\n        })\n        console.log(\"Image List---->\", ImageList.current)\n        console.log(\"Image List---->\", ImageList.current)\n\n    }, [])\n\n    const slideLeft = (index, duration, multipiled = 1) => {\n        TweenLite.to(ImageList.children[index], duration, {\n            x: -200 * multipiled,\n            ease: Power2.easeOut\n\n        })\n    }\n\n    const slideRight = (index, duration, multipiled = 1) => {\n        TweenLite.to(ImageList.children[index], duration, {\n            x: 200 * multipiled,\n            ease: Power2.easeOut\n\n        })\n    }\n\n    const fadeOut = (index,duration,delayed = 0) => {\n        TweenLite.to(TestimonialList.current.children[index],duration, {\n            opacity: 0,\n            delay: delayed\n        })\n    }\n\n    const fadeIn = (index,duration,delayed) => {\n        TweenLite.to(TestimonialList.current.children[index],duration, {\n            opacity: 1,\n            delay: delayed\n        })\n    }\n\n    const scale = (index,duration,scaled) => {\n        TweenLite.from(ImageList.children[index],duration,{\n            scale: scaled,\n            ease: Power2.ease\n        \n        })\n    }\n\n    const nextSlide = () => {\n\n        if (ImageList.children[0].classList.contains(\"active\")) {\n            \n            setstate({ active1: false, active2: true })\n\n           \n            slideLeft(0, 1);\n            slideLeft(1, 1);\n            slideLeft(2, 1);\n            \n            scale(1,1,1.2)\n            \n            fadeOut(0,1)\n            fadeIn(1,1)\n\n\n        }\n        else if (ImageList.children[1].classList.contains(\"active\")) {\n            setstate({ active2: false, active3: true })\n\n            slideLeft(1, 1, 2)\n            slideLeft(2, 1, 2)\n            slideLeft(0, 1, 2)\n\n            scale(2,1,1.2)\n\n            fadeOut(1,1)\n            fadeIn(2,1)\n\n\n        }\n        else if (ImageList.children[2].classList.contains(\"active\")) {\n            setstate({active3:true, stop: true })\n\n            // slideLeft(0,1,0)\n        }\n\n    }\n\n\n\n    const prevSlide = () => {\n        if (ImageList.children[2].classList.contains(\"active\")) {\n            \n            setstate({active3: false, active2: true})\n            slideRight(2,1,-1)\n            slideRight(1,1,-1)\n            slideRight(0,1,-1)\n\n            scale(1,1,1.2)\n\n            fadeOut(2,1)\n            fadeIn(1,1)\n\n        }\n\n        else if(ImageList.children[1].classList.contains(\"active\")) {\n            setstate({active2: false, active1: true})\n            \n            \n            slideRight(2,1,0)\n            slideRight(1,1,0)\n            slideRight(0,1,0)\n\n            scale(0,1,1.2)\n        \n            fadeOut(1,1)\n            fadeIn(0,1)\n        \n        }\n    }\n\n   \n\n    return (\n\n        <div className=\"testimonial-container\">\n\n            <div onClick={prevSlide} className=\"arrow left\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 330 330\" style={{ \"enable-background\": \"new 0 0 330 330\" }} xmlSpace=\"preserve\">\n                    <path id=\"XMLID_29_\" d=\"M100.606,100.606L150,51.212V315c0,8.284,6.716,15,15,15c8.284,0,15-6.716,15-15V51.212l49.394,49.394\n\tC232.322,103.535,236.161,105,240,105c3.839,0,7.678-1.465,10.606-4.394c5.858-5.857,5.858-15.355,0-21.213l-75-75\n\tc-5.857-5.858-15.355-5.858-21.213,0l-75,75c-5.858,5.857-5.858,15.355,0,21.213C85.251,106.463,94.749,106.463,100.606,100.606z\" />\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>\n\n            </div>\n\n            <div ref={el => { ImageList = el }} className=\"t-images\">\n                <span className={state.active1 == true ? \"active\" : \"\"} >\n                    <img src={image} />\n                </span>\n                <span className={state.active2 == true ? \"active\" : \"\"}>\n                    <img src={image2} />\n                </span>\n                <span className={state.active3 == true ? \"active\" : \"\"}>\n                    <img src={image3} />\n                </span>\n            </div>\n\n\n            {/* Testimonail list */}\n\n            <div ref={TestimonialList} className=\"t-text\">\n                <span className={state.active1 == true ? \"active\" : \"\"}>\n                    <h4>{Data[0].testimonial}</h4>\n                    <p>{Data[0].name}</p>\n                    <p>{Data[0].company}</p>\n                </span>\n                <span className={state.active2 == true ? \"active\" : \"\"}>\n                    <h4>{Data[1].testimonial}</h4>\n                    <p>{Data[1].name}</p>\n                    <p>{Data[1].company}</p>\n                </span>\n                <span className={state.active3 == true ? \"active\" : \"\"}>\n                    <h4>{Data[2].testimonial}</h4>\n                    <p>{Data[2].name}</p>\n                    <p>{Data[2].company}</p>\n                </span>\n\n            </div>\n\n\n            <div onClick={nextSlide} className=\"arrow right\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 330 330\" style={{ \"enable-background\": \"new 0 0 330 330\" }} xmlSpace=\"preserve\">\n                    <path id=\"XMLID_29_\" d=\"M100.606,100.606L150,51.212V315c0,8.284,6.716,15,15,15c8.284,0,15-6.716,15-15V51.212l49.394,49.394\n\tC232.322,103.535,236.161,105,240,105c3.839,0,7.678-1.465,10.606-4.394c5.858-5.857,5.858-15.355,0-21.213l-75-75\n\tc-5.857-5.858-15.355-5.858-21.213,0l-75,75c-5.858,5.857-5.858,15.355,0,21.213C85.251,106.463,94.749,106.463,100.606,100.606z\" />\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>\n\n            </div>\n        </div>\n    )\n}\n","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/Tests/Test.js",["72"],"import React from 'react'\nimport image from '../ImageSlider/pictures/image.jpg'\nimport './test.css'\n\nexport const Test = () => {\n    return (\n        <div>\n            <div className=\"main-bg\">\n                <div className=\"blend\"> \n                    <h3>Hello how</h3>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/scrollTrigger/ScrollTrigger.js",["73","74","75","76","77"],"import React, { useEffect, useRef, useState } from 'react'\nimport './ScrollTrigger.css'\nimport { gsap, TweenMax, TimelineLite, Power3 } from 'gsap';\nimport CSSRulePlugin from 'gsap/CSSRulePlugin';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger'\nimport { MotionPathPlugin } from 'gsap/MotionPathPlugin'\n// import { MorphSVGPlugin } from 'gsap/MorphSVGPlugin'\n\n\n\n\n\n\n\nexport const ScrollTriggered = () => {\n\n    gsap.registerPlugin(ScrollTrigger);\n    gsap.registerPlugin(MotionPathPlugin);\n    // gsap.registerPlugin(MorphSVGPlugin);\n\n    // setState\n    const [state, setstate] = useState(false)\n\n    // refereces\n\n    const frame = useRef(null)\n    const deviceWidth = useRef(null)\n    useEffect(() => {\n\n\n\n        const tl1 = gsap.timeline({\n            scrollTrigger: {\n                trigger: '.device-frame',\n                markers: true,\n                start: 'bottom 60%',\n                end: 'bottom 20%',\n                // pin: true,\n                scrub: 1\n\n            }\n        })\n\n        tl1.to('.device-frame', { css: { width: `${frame.current.offsetWidth + 400}px`, height: `${frame.current.offsetHeight + 50}px` }, duration: 2 })\n\n        // // ScrollTrigger.create({\n        // //     trigger: '.devices-main-frame',\n        // //     start: \"200 100%\",\n        // //     end: \"bottom 0%\",\n        // //     pin: true,\n        // //     markers: true\n        // // })\n        gsap.to('.svg-container', {\n            duration: 2,\n            scrollTrigger: {\n                trigger: '.svg-container',\n                start: \"300 60%\",\n                end: \"bottom 0%\",\n                markers: true,\n                // toggleActions: \"play pause resume pause\",\n                // scrub: true,\n                toggleClass: \"change\",\n                // duration\n                // pin: true,\n                // pinSpacing: true,\n                // pinSpacing: false\n\n            }\n            // toggleClass: '.change'\n        })\n\n    \n        // ********************* PERFECT WORKING ANIMATION ***********************************//\n        // gsap.to('.device-frame', {\n        //     css: { width: `${frame.current.offsetWidth + 400}px`, height: `${frame.current.offsetHeight + 50}px`},\n        //     duration: 2,\n        //     scrollTrigger: {\n        //         trigger: '.devices-main-frame',\n        //         start: \"300 60%\",\n        //         end: \"bottom 0%\",\n        //         markers: true,\n        //         toggleActions: \"play pause resume pause\",\n        //         scrub: true,\n        //         // toggleClass: \"circled\",\n        //         pin: true,\n        //         // pinSpacing: true,\n        //         pinSpacing: false\n\n        //     }\n        // })\n\n         gsap.to('.svg-main', {\n            duration: 2,\n            scrollTrigger: {\n                trigger: '.svg-main',\n                start: \"400 80%\",\n                end: \"bottom 0%\",\n                markers: true,\n                // toggleActions: \"play pause resume pause\",\n                // scrub: true,\n                // toggleClass: \"change\",\n                // duration\n                pin: true,\n                // pinSpacing: true,\n                pinSpacing: false\n\n            }\n            // toggleClass: '.change'\n        })\n\n\n        gsap.to('.menu', {\n            css: { display: state ? \"none\" : \"block\" },\n            scrollTrigger: {\n                onUpdate: () => deviceWidth.current.offsetWidth > 250 ? setstate(true) : setstate(false),\n                toggleClass: deviceWidth.current.offsetWidth > 250 ? \"hide\" : \"\"\n                // onUpdate: () => console.log(state)\n            }\n        })\n        console.log(state);\n        // console.log(frame.current.offsetWidth)\n        // console.log(deviceWidth.current.offsetWidth)\n    }, [])\n\n    // useEffect(() => {\n    //     // gsap.to('.square', {\n    //     //     x: '700',\n    //     //     duration: 3,\n    //     //     scrollTrigger: {\n    //     //         trigger: \".square\",\n    //     //         start: \"top 60%\",\n    //     //         end: \"bottom 20%\",\n    //     //         markers: true,\n    //     //         toggleActions: \"play pause resume pause\",\n    //     //         scrub: true,\n    //     //         toggleClass: \"circled\",\n    //     //         pin: true,\n    //     //         pinSpacing: false\n\n\n    //     //     }\n    //     // });\n    //     let st = ScrollTrigger.create({\n    //         start: \"top 30%\",\n    //         end: \"bottom 10%%\",\n    //         trigger: \".square\",\n    //         toggleClass: {targets:\".square\",className:\"circled\"},\n    //         // pin: \".square\",\n    //         scrub: true,\n    //         // pinSpacing: false,\n    //         markers: true\n\n    //     })\n    //     // // ScrollTrigger.create({\n    //     // //     start: \"top 50%\",\n    //     // //     end: \"bottom 50%\",\n    //     // //     trigger: \".square\",\n    //     // //     toggleClass: \"oval\",\n    //     // //     pin: \".square\",\n    //     // //     // top: 500,\n    //     // //     pinSpacing: false,\n\n    //     // //     pinType: 'fixed',\n    //     // //     markers: true\n\n    //     // })\n    //     ScrollTrigger.create({\n    //         start: \"top 50%\",\n    //         end: \"bottom 0%\",\n    //         trigger: \".square-container\",\n    //         // toggleClass: \"oval\",\n    //         pin: \".square-container\",\n    //         // top: 500,\n    //         pinSpacing: false,\n\n    //         // pinType: 'fixed',\n    //         markers: true\n\n    //     })\n\n    // }, [])\n\n\n\n\n\n    return (\n        <div className=\"scroll-main\">\n\n            <div className=\"pink\">\n\n            </div>\n            <div className=\"salmon\">\n                {/* <div className=\"square-container\"> */}\n                {/* <div className=\"square\"></div> */}\n                {/* </div>\n             */}\n\n                <div className=\"devices-main-frame\">\n                    <div ref={frame} className=\"device-frame\">\n                        <div ref={deviceWidth} className=\"mobile-devices\">\n                            <div className=\"menu\">\n                                <div></div>\n                                <div></div>\n                                <div></div>\n                            </div>\n                            <div className=\"content\">\n                                <div className=\"main-heading\"></div>\n                                <div className=\"sub-heading\"></div>\n                                <div className=\"header\"></div>\n                                <div className=\"cards\">\n\n                                    <div className=\"card1-main\">\n                                        <div className=\"card1\"></div>\n                                        <div className=\"text1\">\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"card2-main\">\n                                        <div className=\"card2\"></div>\n                                        <div className=\"text1\">\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"card3-main\">\n                                        <div className=\"card3\"></div>\n                                        <div className=\"text1\">\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"card3-main\">\n                                        <div className=\"card3\"></div>\n                                        <div className=\"text1\">\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                            <div></div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* <div></div> */}\n                            </div>\n                        </div>\n                        <div className=\"switch\">\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"svg-main\"> \n                    {/* sgv */}\n                    <div className=\"svg-container\">\n\n                    </div>\n                </div>\n            </div>\n\n\n\n\n\n        </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// phy : 64\n// pst: 80\n// stats: 75\n// English: 76\n// Isl: 86\n// cal: 71\n","/home/obaidnadeem/Desktop/saylaniClass/green-stock/src/HowItWorksAnimation/Anim.js",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":16},{"ruleId":"97","severity":1,"message":"102","line":3,"column":18,"nodeType":"99","messageId":"100","endLine":3,"endColumn":27},{"ruleId":"97","severity":1,"message":"103","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":18},{"ruleId":"97","severity":1,"message":"104","line":4,"column":20,"nodeType":"99","messageId":"100","endLine":4,"endColumn":26},{"ruleId":"97","severity":1,"message":"105","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":17},{"ruleId":"97","severity":1,"message":"106","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":21},{"ruleId":"97","severity":1,"message":"107","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":21},{"ruleId":"97","severity":1,"message":"108","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":14},{"ruleId":"97","severity":1,"message":"109","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":25},{"ruleId":"97","severity":1,"message":"110","line":1,"column":36,"nodeType":"99","messageId":"100","endLine":1,"endColumn":44},{"ruleId":"97","severity":1,"message":"103","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":21,"column":8,"nodeType":"113","endLine":21,"endColumn":10,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":28,"column":25,"nodeType":"117","endLine":28,"endColumn":56},{"ruleId":"97","severity":1,"message":"103","line":2,"column":21,"nodeType":"99","messageId":"100","endLine":2,"endColumn":29},{"ruleId":"97","severity":1,"message":"118","line":2,"column":31,"nodeType":"99","messageId":"100","endLine":2,"endColumn":43},{"ruleId":"97","severity":1,"message":"119","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":209,"column":48,"nodeType":"122","messageId":"123","endLine":209,"endColumn":50},{"ruleId":"115","severity":1,"message":"116","line":210,"column":21,"nodeType":"117","endLine":210,"endColumn":40},{"ruleId":"120","severity":1,"message":"121","line":212,"column":48,"nodeType":"122","messageId":"123","endLine":212,"endColumn":50},{"ruleId":"115","severity":1,"message":"116","line":213,"column":21,"nodeType":"117","endLine":213,"endColumn":41},{"ruleId":"120","severity":1,"message":"121","line":215,"column":48,"nodeType":"122","messageId":"123","endLine":215,"endColumn":50},{"ruleId":"115","severity":1,"message":"116","line":216,"column":21,"nodeType":"117","endLine":216,"endColumn":41},{"ruleId":"120","severity":1,"message":"121","line":224,"column":48,"nodeType":"122","messageId":"123","endLine":224,"endColumn":50},{"ruleId":"120","severity":1,"message":"121","line":229,"column":48,"nodeType":"122","messageId":"123","endLine":229,"endColumn":50},{"ruleId":"120","severity":1,"message":"121","line":234,"column":48,"nodeType":"122","messageId":"123","endLine":234,"endColumn":50},{"ruleId":"97","severity":1,"message":"124","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"103","line":3,"column":16,"nodeType":"99","messageId":"100","endLine":3,"endColumn":24},{"ruleId":"97","severity":1,"message":"118","line":3,"column":26,"nodeType":"99","messageId":"100","endLine":3,"endColumn":38},{"ruleId":"97","severity":1,"message":"104","line":3,"column":40,"nodeType":"99","messageId":"100","endLine":3,"endColumn":46},{"ruleId":"97","severity":1,"message":"119","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":21},{"ruleId":"111","severity":1,"message":"125","line":123,"column":8,"nodeType":"113","endLine":123,"endColumn":10,"suggestions":"126"},{"ruleId":"97","severity":1,"message":"102","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":34},{"ruleId":"97","severity":1,"message":"110","line":1,"column":36,"nodeType":"99","messageId":"100","endLine":1,"endColumn":44},{"ruleId":"97","severity":1,"message":"127","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"103","line":2,"column":16,"nodeType":"99","messageId":"100","endLine":2,"endColumn":24},{"ruleId":"97","severity":1,"message":"118","line":2,"column":26,"nodeType":"99","messageId":"100","endLine":2,"endColumn":38},{"ruleId":"97","severity":1,"message":"104","line":2,"column":40,"nodeType":"99","messageId":"100","endLine":2,"endColumn":46},{"ruleId":"97","severity":1,"message":"119","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"128","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":23},{"ruleId":"97","severity":1,"message":"129","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":26},{"ruleId":"97","severity":1,"message":"130","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":11},{"ruleId":"97","severity":1,"message":"131","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":11},{"ruleId":"97","severity":1,"message":"132","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":12},{"ruleId":"97","severity":1,"message":"133","line":11,"column":8,"nodeType":"99","messageId":"100","endLine":11,"endColumn":12},{"ruleId":"97","severity":1,"message":"134","line":12,"column":8,"nodeType":"99","messageId":"100","endLine":12,"endColumn":13},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'TweenMax' is defined but never used.","'Power3' is defined but never used.","'Circles' is defined but never used.","'ImageReveal' is defined but never used.","'ImageSlider' is defined but never used.","'Test' is defined but never used.","'ScrollTriggered' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'reveal' and 'tl'. Either include them or remove the dependency array.","ArrayExpression",["137"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TimelineLite' is defined but never used.","'CSSRulePlugin' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'image' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["138"],"'gsap' is defined but never used.","'ScrollTrigger' is defined but never used.","'MotionPathPlugin' is defined but never used.","'bg1' is defined but never used.","'bg2' is defined but never used.","'img1' is defined but never used.","'img2' is defined but never used.","'anime' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [reveal, tl]",{"range":"143","text":"144"},"Update the dependencies array to be: [state]",{"range":"145","text":"146"},[678,680],"[reveal, tl]",[3780,3782],"[state]"]